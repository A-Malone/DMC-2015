Done pre-test: 324 kws , 17506 clickthroughs , 158175 lines
Done loading data : (17507, 331) (17507,)
Importing SKlearn
# Tuning hyper-parameters for precision
()
Best parameters set found on development set:
()
SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0, degree=3,
  gamma=0.001, kernel=rbf, max_iter=-1, probability=False,
  random_state=None, shrinking=True, tol=0.001, verbose=False)
()
Grid scores on development set:
()
0.779 (+/-0.002) for {'kernel': 'rbf', 'C': 1, 'gamma': 0.001}
0.779 (+/-0.002) for {'kernel': 'rbf', 'C': 1, 'gamma': 0.0001}
0.778 (+/-0.002) for {'kernel': 'rbf', 'C': 10, 'gamma': 0.001}
0.779 (+/-0.002) for {'kernel': 'rbf', 'C': 10, 'gamma': 0.0001}
0.780 (+/-0.003) for {'kernel': 'rbf', 'C': 100, 'gamma': 0.001}
0.778 (+/-0.002) for {'kernel': 'rbf', 'C': 100, 'gamma': 0.0001}
0.814 (+/-0.012) for {'kernel': 'rbf', 'C': 1000, 'gamma': 0.001}
0.779 (+/-0.002) for {'kernel': 'rbf', 'C': 1000, 'gamma': 0.0001}
0.800 (+/-0.005) for {'kernel': 'linear', 'C': 1}
0.799 (+/-0.005) for {'kernel': 'linear', 'C': 10}
0.798 (+/-0.003) for {'kernel': 'linear', 'C': 100}
0.799 (+/-0.005) for {'kernel': 'linear', 'C': 1000}
()
# Tuning hyper-parameters for recall
()
Best parameters set found on development set:
()
SVC(C=1, cache_size=200, class_weight=None, coef0=0.0, degree=3, gamma=0.0001,
  kernel=rbf, max_iter=-1, probability=False, random_state=None,
  shrinking=True, tol=0.001, verbose=False)
()
Grid scores on development set:
()
0.881 (+/-0.002) for {'kernel': 'rbf', 'C': 1, 'gamma': 0.001}
0.882 (+/-0.001) for {'kernel': 'rbf', 'C': 1, 'gamma': 0.0001}
0.877 (+/-0.003) for {'kernel': 'rbf', 'C': 10, 'gamma': 0.001}
0.880 (+/-0.002) for {'kernel': 'rbf', 'C': 10, 'gamma': 0.0001}
0.876 (+/-0.003) for {'kernel': 'rbf', 'C': 100, 'gamma': 0.001}
0.877 (+/-0.003) for {'kernel': 'rbf', 'C': 100, 'gamma': 0.0001}
0.870 (+/-0.007) for {'kernel': 'rbf', 'C': 1000, 'gamma': 0.001}
0.879 (+/-0.002) for {'kernel': 'rbf', 'C': 1000, 'gamma': 0.0001}
0.875 (+/-0.004) for {'kernel': 'linear', 'C': 1}
0.866 (+/-0.003) for {'kernel': 'linear', 'C': 10}
0.863 (+/-0.002) for {'kernel': 'linear', 'C': 100}
0.858 (+/-0.004) for {'kernel': 'linear', 'C': 1000}
()
